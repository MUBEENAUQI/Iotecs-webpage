{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\IoTECS-for-Medical-Transportation\\\\src\\\\components\\\\Bodypara\\\\ECG.js\";\nimport React, { Component } from \"react\";\nimport CanvasJSReact from \"../../assets/canvasjs.react\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/database\";\nimport Row from \"react-bootstrap/esm/Row\";\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar dps = [{\n  x: 2,\n  y: 81\n}, {\n  x: 3,\n  y: 83\n}, {\n  x: 4,\n  y: 88\n}, {\n  x: 5,\n  y: 98\n}, {\n  x: 6,\n  y: 92\n}, {\n  x: 7,\n  y: 85\n}, {\n  x: 8,\n  y: 73\n}, {\n  x: 9,\n  y: 71\n}, {\n  x: 10,\n  y: 70\n}, {\n  x: 11,\n  y: 83\n}]; //dataPoints.\n\nvar xVal = dps.length + .1;\nvar yVal = 15;\nvar updateInterval = 100;\n\nclass ECG extends React.Component {\n  constructor() {\n    super();\n    this.updateChart = this.updateChart.bind(this);\n    this.state = {\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    firebase.database().ref(\"sensorData/1-set\").on(\"value\", snapshot => {\n      console.log(snapshot.val().object);\n      this.setState({\n        count: snapshot.val().ecg\n      });\n    });\n    setInterval(this.updateChart, updateInterval);\n  }\n\n  updateChart() {\n    yVal = this.state.count;\n    dps.push({\n      x: xVal,\n      y: yVal\n    });\n    xVal++;\n\n    if (dps.length > 10) {\n      dps.shift();\n    }\n\n    this.chart.render();\n  }\n\n  render() {\n    const options = {\n      title: {\n        text: \"ECG - Echo Cardiogram\"\n      },\n      axisX: {\n        title: \"\",\n        interval: 100000\n      },\n      axisY: {\n        title: \"\",\n        gridColor: \"white\",\n        tickColor: \"white\"\n      },\n      data: [{\n        type: \"spline\",\n        dataPoints: dps,\n        markerColor: rgba(200, 200, 200, 0.3)\n      }]\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: options,\n      onRef: ref => this.chart = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ECG;","map":{"version":3,"sources":["D:/project/IoTECS-for-Medical-Transportation/src/components/Bodypara/ECG.js"],"names":["React","Component","CanvasJSReact","firebase","Row","CanvasJSChart","dps","x","y","xVal","length","yVal","updateInterval","ECG","constructor","updateChart","bind","state","count","componentDidMount","database","ref","on","snapshot","console","log","val","object","setState","ecg","setInterval","push","shift","chart","render","options","title","text","axisX","interval","axisY","gridColor","tickColor","data","type","dataPoints","markerColor","rgba"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport CanvasJSReact from \"../../assets/canvasjs.react\";\r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/database\";\r\nimport Row from \"react-bootstrap/esm/Row\";\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\nvar dps = [{ x: 2, y: 81 },\r\n\t{ x: 3, y: 83 },\r\n\t{ x: 4, y: 88 },\r\n\t{ x: 5, y: 98 },\r\n\t{ x: 6, y: 92 },\r\n\t{ x: 7, y: 85 },\r\n\t{ x: 8, y: 73 },\r\n\t{ x: 9, y: 71 },\r\n\t{ x: 10, y: 70 },\r\n\t{ x: 11, y: 83 },];   //dataPoints.\r\n\r\nvar xVal = dps.length + .1;\r\nvar yVal = 15;\r\nvar updateInterval = 100;\r\n\r\nclass ECG extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.updateChart = this.updateChart.bind(this);\r\n\t\tthis.state = {\r\n\t\t\tcount:0\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t\tfirebase.database().ref(\"sensorData/1-set\").on(\"value\", snapshot => {\r\n\t\t\tconsole.log(snapshot.val().object);\r\n\t\t\tthis.setState({ count: snapshot.val().ecg });\r\n\r\n\t\t});\r\n\r\n\t\tsetInterval(this.updateChart, updateInterval);\r\n\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\r\n\tupdateChart() {\r\n\r\n\t\tyVal = this.state.count;\r\n\t\tdps.push({ x: xVal, y: yVal });\r\n\t\txVal++;\r\n\t\tif (dps.length > 10) {\r\n\t\t\tdps.shift();\r\n\t\t}\r\n\t\tthis.chart.render();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst options = {\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: \"ECG - Echo Cardiogram\"\r\n\t\t\t},\r\n\t\t\taxisX: {\r\n\t\t\t\ttitle: \"\",\r\n\t\t\t\tinterval: 100000\r\n\t\t\t},\r\n\t\t\taxisY: {\r\n\t\t\t\ttitle: \"\",\r\n\t\t\t\tgridColor: \"white\",\r\n\t\t\t\ttickColor: \"white\",\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tdata: [{\r\n\t\t\t\ttype: \"spline\",\r\n\t\t\t\tdataPoints: dps,\r\n\t\t\t\tmarkerColor: rgba(200, 200, 200, 0.3)\r\n\t\t\t\t\r\n\t\t\t},]\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<CanvasJSChart options={options}\r\n\t\t\t\t\tonRef={ref => this.chart = ref}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default ECG;\r\n\r\n"]},"metadata":{},"sourceType":"module"}