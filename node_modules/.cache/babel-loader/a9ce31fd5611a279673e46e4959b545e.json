{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mubee\\\\Desktop\\\\IoTECS-for-Medical-Transportation\\\\src\\\\components\\\\Bodypara\\\\ECG.js\";\nimport React, { PureComponent } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nconst data = [];\n\nfor (let num = 500; num >= 0; num--) {\n  data.push({\n    y: Math.floor(Math.random() * (400 - 180 + 1)) + 180\n  });\n}\n\nexport default function ECG() {\n  return React.createElement(ResponsiveContainer, {\n    width: \"300\",\n    height: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(LineChart, {\n    width: 300,\n    height: 80,\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"y\",\n    stroke: \"#8884d8\",\n    strokeWidth: 3,\n    dot: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(CartesianGrid, {\n    opacity: 1,\n    vertical: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["C:/Users/Mubee/Desktop/IoTECS-for-Medical-Transportation/src/components/Bodypara/ECG.js"],"names":["React","PureComponent","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","data","num","push","y","Math","floor","random","ECG"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,KAAjC,EAAwCC,aAAxC,EAAuDC,OAAvD,EAAgEC,MAAhE,EAAwEC,mBAAxE,QAAmG,UAAnG;AAEA,MAAMC,IAAI,GAAG,EAAb;;AAEA,KAAK,IAAIC,GAAG,GAAG,GAAf,EAAoBA,GAAG,IAAI,CAA3B,EAA8BA,GAAG,EAAjC,EAAqC;AACjCD,EAAAA,IAAI,CAACE,IAAL,CAAU;AACNC,IAAAA,CAAC,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,MAAM,GAAN,GAAY,CAA7B,CAAX,IAA8C;AAD3C,GAAV;AAKH;;AAGD,eAAe,SAASC,GAAT,GAAe;AACtB,SACI,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAC,KAA3B;AAAiC,IAAA,MAAM,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE,GAAlB;AAAuB,IAAA,MAAM,EAAE,EAA/B;AAAmC,IAAA,IAAI,EAAEP,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,GAA9B;AAAkC,IAAA,MAAM,EAAC,SAAzC;AAAmD,IAAA,WAAW,EAAE,CAAhE;AAAmE,IAAA,GAAG,EAAE,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAE,CAAxB;AAA2B,IAAA,QAAQ,EAAE,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAII,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CADJ;AAWP","sourcesContent":["\r\nimport React, { PureComponent } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nconst data = [];\r\n\r\nfor (let num = 500; num >= 0; num--) {\r\n    data.push({\r\n        y: Math.floor(Math.random() * (400 - 180 + 1)) + 180\r\n       \r\n    });\r\n   \r\n}\r\n                        \r\n\r\nexport default function ECG() {\r\n        return (\r\n            <ResponsiveContainer width=\"300\" height=\"100%\">\r\n                <LineChart width={300} height={80} data={data}>\r\n                    <Line type=\"monotone\" dataKey=\"y\" stroke=\"#8884d8\" strokeWidth={3} dot={false}/>\r\n                    <CartesianGrid opacity={1} vertical={false} />\r\n\r\n                    <YAxis  />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        );\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}