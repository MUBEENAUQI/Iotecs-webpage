{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\IoTECS-for-Medical-Transportation\\\\src\\\\components\\\\Bodypara\\\\ECG.js\";\nimport React, { Component } from \"react\";\nimport CanvasJSReact from \"../../assets/canvasjs.react\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/database\";\nimport Row from \"react-bootstrap/esm/Row\";\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar dps = [{\n  x: 2,\n  y: 81\n}, {\n  x: 3,\n  y: 83\n}, {\n  x: 4,\n  y: 88\n}, {\n  x: 5,\n  y: 98\n}, {\n  x: 6,\n  y: 92\n}, {\n  x: 7,\n  y: 85\n}, {\n  x: 8,\n  y: 73\n}, {\n  x: 9,\n  y: 71\n}, {\n  x: 10,\n  y: 70\n}]; //dataPoints.\n\nvar k = 0;\nvar xVal = 11;\nvar updateInterval = 100;\nvar i = 0;\n\nclass ECG extends React.Component {\n  constructor() {\n    super();\n    this.updateChart = this.updateChart.bind(this);\n    this.state = {\n      one: 0,\n      two: 0,\n      three: 0,\n      four: 0,\n      five: 0,\n      six: 0,\n      seven: 0,\n      eight: 0,\n      nine: 0,\n      ten: 0\n    };\n  }\n\n  componentDidMount() {\n    firebase.database().ref(\"sensorData/1-set\").on(\"value\", snapshot => {\n      //console.log(snapshot.val().object);\n      //this.setState({ count: snapshot.val().ecg });\n      this.setState({\n        one: snapshot.val().ecg1\n      });\n      this.setState({\n        two: snapshot.val().ecg2\n      });\n      this.setState({\n        three: snapshot.val().ecg3\n      });\n      this.setState({\n        four: snapshot.val().ecg4\n      });\n      this.setState({\n        five: snapshot.val().ecg5\n      });\n      this.setState({\n        six: snapshot.val().ecg6\n      });\n      this.setState({\n        seven: snapshot.val().ecg7\n      });\n      this.setState({\n        eight: snapshot.val().ecg8\n      });\n      this.setState({\n        nine: snapshot.val().ecg9\n      });\n      this.setState({\n        ten: snapshot.val().ecg10\n      });\n    });\n    setInterval(this.updateChart, updateInterval);\n  }\n\n  updateChart() {\n    //   dps.push(dps[i])\n    if (dps.length > 100) {\n      dps.push({\n        x: xVal,\n        y: this.state.one\n      });\n      xVal++;\n      dps.shift();\n      dps.push({\n        x: xVal,\n        y: this.state.two\n      });\n      xVal++;\n      dps.shift();\n      dps.push({\n        x: xVal,\n        y: this.state.three\n      });\n      xVal++;\n      dps.shift();\n      dps.push({\n        x: xVal,\n        y: this.state.four\n      });\n      xVal++;\n      dps.shift();\n      dps.push({\n        x: xVal,\n        y: this.state.five\n      });\n      xVal++;\n      dps.shift();\n      dps.push({\n        x: xVal,\n        y: this.state.six\n      });\n      xVal++;\n      dps.shift();\n      dps.push({\n        x: xVal,\n        y: this.state.seven\n      });\n      xVal++;\n      dps.shift();\n      dps.push({\n        x: xVal,\n        y: this.state.eight\n      });\n      xVal++;\n      dps.shift();\n      dps.push({\n        x: xVal,\n        y: this.state.nine\n      });\n      xVal++;\n      dps.shift();\n      dps.push({\n        x: xVal,\n        y: this.state.ten\n      });\n      xVal++;\n      dps.shift();\n      k = 0;\n    } else {\n      dps.push({\n        x: xVal,\n        y: this.state.one\n      });\n      xVal++;\n      dps.push({\n        x: xVal,\n        y: this.state.two\n      });\n      xVal++;\n      dps.push({\n        x: xVal,\n        y: this.state.three\n      });\n      xVal++;\n      dps.push({\n        x: xVal,\n        y: this.state.four\n      });\n      xVal++;\n      dps.push({\n        x: xVal,\n        y: this.state.five\n      });\n      xVal++;\n      dps.push({\n        x: xVal,\n        y: this.state.six\n      });\n      xVal++;\n      dps.push({\n        x: xVal,\n        y: this.state.seven\n      });\n      xVal++;\n      dps.push({\n        x: xVal,\n        y: this.state.eight\n      });\n      xVal++;\n      dps.push({\n        x: xVal,\n        y: this.state.nine\n      });\n      xVal++;\n      dps.push({\n        x: xVal,\n        y: this.state.ten\n      });\n      xVal++;\n    }\n\n    this.chart.render();\n  }\n\n  render() {\n    const options = {\n      title: {\n        text: \"ECG - Echo Cardiogram\"\n      },\n      axisX: {\n        interval: 10000000000000000000000\n      },\n      axisY: {\n        title: \"\",\n        gridColor: \"white\",\n        tickColor: \"white\",\n        interval: 1000,\n        minimum: -100,\n        maximum: 800\n      },\n      dataPointWidth: 5,\n      data: [{\n        type: \"line\",\n        dataPoints: dps,\n        markerColor: \"rgba(200, 200, 200, 0)\"\n      }]\n    };\n    return React.createElement(\"div\", {\n      style: {\n        width: \"25%%\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: options,\n      onRef: ref => this.chart = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ECG;","map":{"version":3,"sources":["D:/project/IoTECS-for-Medical-Transportation/src/components/Bodypara/ECG.js"],"names":["React","Component","CanvasJSReact","firebase","Row","CanvasJSChart","dps","x","y","k","xVal","updateInterval","i","ECG","constructor","updateChart","bind","state","one","two","three","four","five","six","seven","eight","nine","ten","componentDidMount","database","ref","on","snapshot","setState","val","ecg1","ecg2","ecg3","ecg4","ecg5","ecg6","ecg7","ecg8","ecg9","ecg10","setInterval","length","push","shift","chart","render","options","title","text","axisX","interval","axisY","gridColor","tickColor","minimum","maximum","dataPointWidth","data","type","dataPoints","markerColor","width","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport CanvasJSReact from \"../../assets/canvasjs.react\";\r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/database\";\r\nimport Row from \"react-bootstrap/esm/Row\";\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\nvar dps = [{ x: 2, y: 81 },\r\n{ x: 3, y: 83 },\r\n{ x: 4, y: 88 },\r\n{ x: 5, y: 98 },\r\n{ x: 6, y: 92 },\r\n{ x: 7, y: 85 },\r\n{ x: 8, y: 73 },\r\n{ x: 9, y: 71 },\r\n{ x: 10, y: 70 },\r\n];   //dataPoints.\r\nvar k = 0;\r\nvar xVal = 11;\r\nvar updateInterval = 100;\r\nvar i = 0;\r\n\r\n\r\nclass ECG extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.updateChart = this.updateChart.bind(this);\r\n\t\tthis.state = {\r\n\r\n\t\t\tone: 0,\r\n\t\t\ttwo: 0,\r\n\t\t\tthree: 0,\r\n\t\t\tfour: 0,\r\n\t\t\tfive: 0,\r\n\t\t\tsix: 0,\r\n\t\t\tseven: 0,\r\n\t\t\teight: 0,\r\n\t\t\tnine: 0,\r\n\t\t\tten: 0,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t\tfirebase.database().ref(\"sensorData/1-set\").on(\"value\", snapshot => {\r\n\t\t\t//console.log(snapshot.val().object);\r\n\t\t\t//this.setState({ count: snapshot.val().ecg });\r\n\t\t\tthis.setState({ one: snapshot.val().ecg1 });\r\n\t\t\tthis.setState({ two: snapshot.val().ecg2 });\r\n\t\t\tthis.setState({ three: snapshot.val().ecg3 });\r\n\t\t\tthis.setState({ four: snapshot.val().ecg4 });\r\n\t\t\tthis.setState({ five: snapshot.val().ecg5 });\r\n\t\t\tthis.setState({ six: snapshot.val().ecg6 });\r\n\t\t\tthis.setState({ seven: snapshot.val().ecg7 });\r\n\t\t\tthis.setState({ eight: snapshot.val().ecg8 });\r\n\t\t\tthis.setState({ nine: snapshot.val().ecg9 });\r\n\t\t\tthis.setState({ ten: snapshot.val().ecg10 });\r\n\t\t});\r\n\r\n\t\tsetInterval(this.updateChart, updateInterval);\r\n\r\n\r\n\r\n\t}\r\n\r\n\r\n\tupdateChart() {\r\n\r\n\r\n\t\t\r\n\r\n\t\t//   dps.push(dps[i])\r\n\t\tif (dps.length > 100) {\r\n\t\t\tdps.push({ x: xVal, y: this.state.one }); xVal++; dps.shift();\r\n\t\t\tdps.push({ x: xVal, y: this.state.two }); xVal++; dps.shift();\r\n\t\t\tdps.push({ x: xVal, y: this.state.three }); xVal++; dps.shift();\r\n\t\t\tdps.push({ x: xVal, y: this.state.four }); xVal++; dps.shift();\r\n\t\t\tdps.push({ x: xVal, y: this.state.five }); xVal++; dps.shift();\r\n\t\t\tdps.push({ x: xVal, y: this.state.six }); xVal++; dps.shift();\r\n\t\t\tdps.push({ x: xVal, y: this.state.seven }); xVal++; dps.shift();\r\n\t\t\tdps.push({ x: xVal, y: this.state.eight }); xVal++; dps.shift();\r\n\t\t\tdps.push({ x: xVal, y: this.state.nine }); xVal++; dps.shift();\r\n\t\t\tdps.push({ x: xVal, y: this.state.ten }); xVal++;\r\n\t\t\tdps.shift();\r\n\r\n\r\n\t\t\tk = 0\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdps.push({ x: xVal, y: this.state.one }); xVal++;\r\n\t\t\tdps.push({ x: xVal, y: this.state.two }); xVal++;\r\n\t\t\tdps.push({ x: xVal, y: this.state.three }); xVal++;\r\n\t\t\tdps.push({ x: xVal, y: this.state.four }); xVal++;\r\n\t\t\tdps.push({ x: xVal, y: this.state.five }); xVal++;\r\n\t\t\tdps.push({ x: xVal, y: this.state.six }); xVal++;\r\n\t\t\tdps.push({ x: xVal, y: this.state.seven }); xVal++;\r\n\t\t\tdps.push({ x: xVal, y: this.state.eight }); xVal++;\r\n\t\t\tdps.push({ x: xVal, y: this.state.nine }); xVal++;\r\n\t\t\tdps.push({ x: xVal, y: this.state.ten }); xVal++;\r\n        }\r\n\t\tthis.chart.render();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst options = {\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: \"ECG - Echo Cardiogram\"\r\n\t\t\t},\r\n\t\t\taxisX: {\r\n\t\t\t\tinterval: 10000000000000000000000,\r\n\t\t\t},\r\n\t\t\taxisY: {\r\n\t\t\t\ttitle: \"\",\r\n\t\t\t\tgridColor: \"white\",\r\n\t\t\t\ttickColor: \"white\",\r\n\t\t\t\tinterval: 1000,\r\n\t\t\t\tminimum: -100,\r\n\t\t\t\tmaximum: 800\r\n\t\t\t},\r\n\t\t\tdataPointWidth: 5,\r\n\t\t\tdata: [{\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tdataPoints: dps,\r\n\t\t\t\tmarkerColor: \"rgba(200, 200, 200, 0)\"\r\n\r\n\t\t\t},]\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div style={{ width: \"25%%\", justifyContent: \"center\" }}>\r\n\t\t\t\t<CanvasJSChart options={options}\r\n\t\t\t\t\tonRef={ref => this.chart = ref}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default ECG;"]},"metadata":{},"sourceType":"module"}