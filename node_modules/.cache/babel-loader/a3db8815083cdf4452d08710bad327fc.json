{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mubee\\\\Desktop\\\\IoTECS-for-Medical-Transportation\\\\src\\\\components\\\\Bodypara\\\\ECG.js\";\nimport React, { Component } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nconst data = [];\nconst k = 0;\nconst i = 0;\n\nfor (let num = 500; num >= 0; num--) {\n  data.push({\n    y: Math.floor(Math.random() * (400 - 180 + 1)) + 180\n  });\n}\n\nclass ECG extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      TempList: []\n    };\n  }\n\n  renderData() {\n    i = 0;\n\n    while (i < 100) {\n      this.state.myArray.push(data[k]);\n      i++;\n      k++;\n    }\n\n    this.state.TempList = [];\n  }\n\n  render() {\n    return React.createElement(ResponsiveContainer, {\n      width: \"50%\",\n      height: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(LineChart, {\n      width: 300,\n      height: 80,\n      data: this.TempList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"y\",\n      stroke: \"#8884d8\",\n      strokeWidth: 3,\n      dot: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(CartesianGrid, {\n      opacity: 1,\n      vertical: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ECG;","map":{"version":3,"sources":["C:/Users/Mubee/Desktop/IoTECS-for-Medical-Transportation/src/components/Bodypara/ECG.js"],"names":["React","Component","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","data","k","i","num","push","y","Math","floor","random","ECG","constructor","props","state","TempList","renderData","myArray","render"],"mappings":";AACA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,KAAjC,EAAwCC,aAAxC,EAAuDC,OAAvD,EAAgEC,MAAhE,EAAwEC,mBAAxE,QAAmG,UAAnG;AAEA,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,CAAC,GAAG,CAAV;AACA,MAAMC,CAAC,GAAG,CAAV;;AAEA,KAAK,IAAIC,GAAG,GAAG,GAAf,EAAoBA,GAAG,IAAI,CAA3B,EAA8BA,GAAG,EAAjC,EAAqC;AACjCH,EAAAA,IAAI,CAACI,IAAL,CAAU;AACNC,IAAAA,CAAC,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,MAAM,GAAN,GAAY,CAA7B,CAAX,IAA8C;AAD3C,GAAV;AAKH;;AAGD,MAAMC,GAAN,SAAkBnB,KAAK,CAACC,SAAxB,CAAkC;AAC9BmB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAEDC,EAAAA,UAAU,GAAG;AACTZ,IAAAA,CAAC,GAAG,CAAJ;;AACA,WAAMA,CAAC,GAAC,GAAR,EAAa;AACT,WAAKU,KAAL,CAAWG,OAAX,CAAmBX,IAAnB,CAAwBJ,IAAI,CAACC,CAAD,CAA5B;AACAC,MAAAA,CAAC;AACDD,MAAAA,CAAC;AACJ;;AACD,SAAKW,KAAL,CAAWC,QAAX,GAAsB,EAAtB;AACH;;AAGDG,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,mBAAD;AAAqB,MAAA,KAAK,EAAC,KAA3B;AAAiC,MAAA,MAAM,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,GAAlB;AAAuB,MAAA,MAAM,EAAE,EAA/B;AAAmC,MAAA,IAAI,EAAE,KAAKH,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC,GAA9B;AAAkC,MAAA,MAAM,EAAC,SAAzC;AAAmD,MAAA,WAAW,EAAE,CAAhE;AAAmE,MAAA,GAAG,EAAE,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAE,CAAxB;AAA2B,MAAA,QAAQ,EAAE,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAII,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,CADJ;AAUH;;AA9B6B;;AAgClC,eAAeJ,GAAf","sourcesContent":["\r\nimport React, {Component } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nconst data = [];\r\nconst k = 0;\r\nconst i = 0;\r\n\r\nfor (let num = 500; num >= 0; num--) {\r\n    data.push({\r\n        y: Math.floor(Math.random() * (400 - 180 + 1)) + 180\r\n       \r\n    });\r\n   \r\n}\r\n\r\n\r\nclass ECG extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            TempList: []\r\n        };\r\n    }\r\n\r\n    renderData() {\r\n        i = 0;\r\n        while(i<100) {\r\n            this.state.myArray.push(data[k]);\r\n            i++;\r\n            k++;\r\n        }\r\n        this.state.TempList = [];\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <ResponsiveContainer width=\"50%\" height=\"100%\">\r\n                <LineChart width={300} height={80} data={this.TempList}>\r\n                    <Line type=\"monotone\" dataKey=\"y\" stroke=\"#8884d8\" strokeWidth={3} dot={false} />\r\n                    <CartesianGrid opacity={1} vertical={false} />\r\n\r\n                    <YAxis />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        );\r\n    }\r\n}\r\nexport default ECG;"]},"metadata":{},"sourceType":"module"}