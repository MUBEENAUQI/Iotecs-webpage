{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\IoTECS-for-Medical-Transportation\\\\src\\\\components\\\\Bodypara\\\\ECG.js\";\nimport React from \"react\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/database\";\nimport Row from \"react-bootstrap/esm/Row\";\n\nclass OXY extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Temp: 0\n    };\n  }\n\n  componentDidMount() {\n    firebase.database().ref(\"sensorData/1-set\").on(\"value\", snapshot => {\n      console.log(snapshot.val().spo3);\n      this.setState({\n        Temp: snapshot.val().spo3\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"tbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"boxfont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Spo2 :\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"boxfont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.Temp)));\n  }\n\n}\n\nexport default OXY; ////import React, { Component } from \"react\"\n////import CanvasJSReact from \"../../assets/canvasjs.react\";\n////import firebase from \"firebase/compat/app\";\n////import \"firebase/compat/database\";\n////import Row from \"react-bootstrap/esm/Row\";\n////var CanvasJSChart = CanvasJSReact.CanvasJSChart;\n////var dps = [{ x: 2, y: 81 },\n////{ x: 3, y: 83 },\n////{ x: 4, y: 88 },\n////{ x: 5, y: 98 },\n////{ x: 6, y: 92 },\n////{ x: 7, y: 85 },\n////{ x: 8, y: 73 },\n////{ x: 9, y: 71 },\n////{ x: 10, y: 70 },\n////];   //dataPoints.\n////var k = 0;\n////var xVal = 11;\n////var updateInterval = 100;\n////var i = 0;\n////class ECG extends React.Component {\n////\tconstructor() {\n////\t\tsuper();\n////\t\tthis.updateChart = this.updateChart.bind(this);\n////\t\tthis.state = {\n////\t\t\tone: 0,\n////\t\t\ttwo: 0,\n////\t\t\tthree: 0,\n////\t\t\tfour: 0,\n////\t\t\tfive: 0,\n////\t\t\tsix: 0,\n////\t\t\tseven: 0,\n////\t\t\teight: 0,\n////\t\t\tnine: 0,\n////\t\t\tten: 0,\n////\t\t};\n////\t}\n////\tcomponentDidMount() {\n////\t\tfirebase.database().ref(\"sensorData/1-set\").on(\"value\", snapshot => {\n////\t\t\t//console.log(snapshot.val().object);\n////\t\t\t//this.setState({ count: snapshot.val().ecg });\n////\t\t\tthis.setState({ one: snapshot.val().ecg1 });\n////\t\t\tthis.setState({ two: snapshot.val().ecg2 });\n////\t\t\tthis.setState({ three: snapshot.val().ecg3 });\n////\t\t\tthis.setState({ four: snapshot.val().ecg4 });\n////\t\t\tthis.setState({ five: snapshot.val().ecg5 });\n////\t\t\tthis.setState({ six: snapshot.val().ecg6 });\n////\t\t\tthis.setState({ seven: snapshot.val().ecg7 });\n////\t\t\tthis.setState({ eight: snapshot.val().ecg8 });\n////\t\t\tthis.setState({ nine: snapshot.val().ecg9 });\n////\t\t\tthis.setState({ ten: snapshot.val().ecg10 });\n////\t\t});\n////\t\tsetInterval(this.updateChart, updateInterval);\n////\t}\n////\tupdateChart() {\n////\t\t//   dps.push(dps[i])\n////\t\tif (dps.length > 200) {\n////\t\t\tdps.push({ x: xVal, y: this.state.one }); xVal++; dps.shift();\n////\t\t\tdps.push({ x: xVal, y: this.state.two }); xVal++; dps.shift();\n////\t\t\tdps.push({ x: xVal, y: this.state.three }); xVal++; dps.shift();\n////\t\t\tdps.push({ x: xVal, y: this.state.four }); xVal++; dps.shift();\n////\t\t\tdps.push({ x: xVal, y: this.state.five }); xVal++; dps.shift();\n////\t\t\tdps.push({ x: xVal, y: this.state.six }); xVal++; dps.shift();\n////\t\t\tdps.push({ x: xVal, y: this.state.seven }); xVal++; dps.shift();\n////\t\t\tdps.push({ x: xVal, y: this.state.eight }); xVal++; dps.shift();\n////\t\t\tdps.push({ x: xVal, y: this.state.nine }); xVal++; dps.shift();\n////\t\t\tdps.push({ x: xVal, y: this.state.ten }); xVal++;\n////\t\t\tdps.shift();\n////\t\t\tk = 0\n////\t\t}\n////\t\telse {\n////\t\t\tdps.push({ x: xVal, y: this.state.one }); xVal++;\n////\t\t\tdps.push({ x: xVal, y: this.state.two }); xVal++;\n////\t\t\tdps.push({ x: xVal, y: this.state.three }); xVal++;\n////\t\t\tdps.push({ x: xVal, y: this.state.four }); xVal++;\n////\t\t\tdps.push({ x: xVal, y: this.state.five }); xVal++;\n////\t\t\tdps.push({ x: xVal, y: this.state.six }); xVal++;\n////\t\t\tdps.push({ x: xVal, y: this.state.seven }); xVal++;\n////\t\t\tdps.push({ x: xVal, y: this.state.eight }); xVal++;\n////\t\t\tdps.push({ x: xVal, y: this.state.nine }); xVal++;\n////\t\t\tdps.push({ x: xVal, y: this.state.ten }); xVal++;\n////        }\n////\t\tthis.chart.render();\n////\t}\n////\trender() {\n////\t\tconst options = {\n////\t\t\ttitle: {\n////\t\t\t\ttext: \"ECG - Echo Cardiogram\"\n////\t\t\t},\n////\t\t\taxisX: {\n////\t\t\t\tinterval: 10000000000000000000000,\n////\t\t\t},\n////\t\t\taxisY: {\n////\t\t\t\ttitle: \"\",\n////\t\t\t\tgridColor: \"white\",\n////\t\t\t\ttickColor: \"white\",\n////\t\t\t\tinterval: 1000,\n////\t\t\t\tminimum: -700,\n////\t\t\t\tmaximum: 800\n////\t\t\t},\n////\t\t\tdataPointWidth: 5,\n////\t\t\tdata: [{\n////\t\t\t\ttype: \"line\",\n////\t\t\t\tdataPoints: dps,\n////\t\t\t\tmarkerColor: \"rgba(200, 200, 200, 0)\"\n////\t\t\t},]\n////\t\t}\n////\t\treturn (\n////\t\t\t<div style={{ width: \"25%%\", justifyContent: \"center\" }}>\n////\t\t\t\t<CanvasJSChart options={options}\n////\t\t\t\t\tonRef={ref => this.chart = ref}\n////\t\t\t\t/>\n////\t\t\t</div>\n////\t\t);\n////\t}\n////}\n////export default ECG;","map":{"version":3,"sources":["D:/project/IoTECS-for-Medical-Transportation/src/components/Bodypara/ECG.js"],"names":["React","firebase","Row","OXY","Component","constructor","props","state","Temp","componentDidMount","database","ref","on","snapshot","console","log","val","spo3","setState","render"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAO,0BAAP;AACA,OAAOC,GAAP,MAAgB,yBAAhB;;AAKA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAG;AAGhBR,IAAAA,QAAQ,CAACS,QAAT,GAAoBC,GAApB,CAAwB,kBAAxB,EAA4CC,EAA5C,CAA+C,OAA/C,EAAwDC,QAAQ,IAAI;AAChEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,GAAT,GAAeC,IAA3B;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,IAAI,EAAEK,QAAQ,CAACG,GAAT,GAAeC;AAAvB,OAAd;AAEH,KAJD;AAOH;;AAGDE,EAAAA,MAAM,GAAG;AACL,WAGI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAL,CADJ,EAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,KAAKZ,KAAL,CAAWC,IAAnC,CAAL,CAFJ,CAHJ;AAUH;;AA/B6B;;AAkClC,eAAeL,GAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAGA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport React from \"react\";\r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/database\";\r\nimport Row from \"react-bootstrap/esm/Row\";\r\n\r\n\r\n\r\n\r\nclass OXY extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Temp: 0,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n\r\n\r\n        firebase.database().ref(\"sensorData/1-set\").on(\"value\", snapshot => {\r\n            console.log(snapshot.val().spo3);\r\n            this.setState({ Temp: snapshot.val().spo3 });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n\r\n            <div className=\"tbox\">\r\n                <Row><p className=\"boxfont\">Spo2 :</p></Row>\r\n                <Row><p className=\"boxfont\">{this.state.Temp}</p></Row>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default OXY;\r\n////import React, { Component } from \"react\"\r\n////import CanvasJSReact from \"../../assets/canvasjs.react\";\r\n////import firebase from \"firebase/compat/app\";\r\n////import \"firebase/compat/database\";\r\n////import Row from \"react-bootstrap/esm/Row\";\r\n////var CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\n////var dps = [{ x: 2, y: 81 },\r\n////{ x: 3, y: 83 },\r\n////{ x: 4, y: 88 },\r\n////{ x: 5, y: 98 },\r\n////{ x: 6, y: 92 },\r\n////{ x: 7, y: 85 },\r\n////{ x: 8, y: 73 },\r\n////{ x: 9, y: 71 },\r\n////{ x: 10, y: 70 },\r\n////];   //dataPoints.\r\n////var k = 0;\r\n////var xVal = 11;\r\n////var updateInterval = 100;\r\n////var i = 0;\r\n\r\n\r\n////class ECG extends React.Component {\r\n////\tconstructor() {\r\n////\t\tsuper();\r\n////\t\tthis.updateChart = this.updateChart.bind(this);\r\n////\t\tthis.state = {\r\n\r\n////\t\t\tone: 0,\r\n////\t\t\ttwo: 0,\r\n////\t\t\tthree: 0,\r\n////\t\t\tfour: 0,\r\n////\t\t\tfive: 0,\r\n////\t\t\tsix: 0,\r\n////\t\t\tseven: 0,\r\n////\t\t\teight: 0,\r\n////\t\t\tnine: 0,\r\n////\t\t\tten: 0,\r\n////\t\t};\r\n////\t}\r\n\r\n////\tcomponentDidMount() {\r\n\r\n////\t\tfirebase.database().ref(\"sensorData/1-set\").on(\"value\", snapshot => {\r\n////\t\t\t//console.log(snapshot.val().object);\r\n////\t\t\t//this.setState({ count: snapshot.val().ecg });\r\n////\t\t\tthis.setState({ one: snapshot.val().ecg1 });\r\n////\t\t\tthis.setState({ two: snapshot.val().ecg2 });\r\n////\t\t\tthis.setState({ three: snapshot.val().ecg3 });\r\n////\t\t\tthis.setState({ four: snapshot.val().ecg4 });\r\n////\t\t\tthis.setState({ five: snapshot.val().ecg5 });\r\n////\t\t\tthis.setState({ six: snapshot.val().ecg6 });\r\n////\t\t\tthis.setState({ seven: snapshot.val().ecg7 });\r\n////\t\t\tthis.setState({ eight: snapshot.val().ecg8 });\r\n////\t\t\tthis.setState({ nine: snapshot.val().ecg9 });\r\n////\t\t\tthis.setState({ ten: snapshot.val().ecg10 });\r\n////\t\t});\r\n\r\n////\t\tsetInterval(this.updateChart, updateInterval);\r\n\r\n\r\n\r\n////\t}\r\n\r\n\r\n////\tupdateChart() {\r\n\r\n\r\n\t\t\r\n\r\n////\t\t//   dps.push(dps[i])\r\n////\t\tif (dps.length > 200) {\r\n////\t\t\tdps.push({ x: xVal, y: this.state.one }); xVal++; dps.shift();\r\n////\t\t\tdps.push({ x: xVal, y: this.state.two }); xVal++; dps.shift();\r\n////\t\t\tdps.push({ x: xVal, y: this.state.three }); xVal++; dps.shift();\r\n////\t\t\tdps.push({ x: xVal, y: this.state.four }); xVal++; dps.shift();\r\n////\t\t\tdps.push({ x: xVal, y: this.state.five }); xVal++; dps.shift();\r\n////\t\t\tdps.push({ x: xVal, y: this.state.six }); xVal++; dps.shift();\r\n////\t\t\tdps.push({ x: xVal, y: this.state.seven }); xVal++; dps.shift();\r\n////\t\t\tdps.push({ x: xVal, y: this.state.eight }); xVal++; dps.shift();\r\n////\t\t\tdps.push({ x: xVal, y: this.state.nine }); xVal++; dps.shift();\r\n////\t\t\tdps.push({ x: xVal, y: this.state.ten }); xVal++;\r\n////\t\t\tdps.shift();\r\n\r\n\r\n////\t\t\tk = 0\r\n////\t\t}\r\n////\t\telse {\r\n////\t\t\tdps.push({ x: xVal, y: this.state.one }); xVal++;\r\n////\t\t\tdps.push({ x: xVal, y: this.state.two }); xVal++;\r\n////\t\t\tdps.push({ x: xVal, y: this.state.three }); xVal++;\r\n////\t\t\tdps.push({ x: xVal, y: this.state.four }); xVal++;\r\n////\t\t\tdps.push({ x: xVal, y: this.state.five }); xVal++;\r\n////\t\t\tdps.push({ x: xVal, y: this.state.six }); xVal++;\r\n////\t\t\tdps.push({ x: xVal, y: this.state.seven }); xVal++;\r\n////\t\t\tdps.push({ x: xVal, y: this.state.eight }); xVal++;\r\n////\t\t\tdps.push({ x: xVal, y: this.state.nine }); xVal++;\r\n////\t\t\tdps.push({ x: xVal, y: this.state.ten }); xVal++;\r\n////        }\r\n////\t\tthis.chart.render();\r\n////\t}\r\n\r\n////\trender() {\r\n////\t\tconst options = {\r\n////\t\t\ttitle: {\r\n////\t\t\t\ttext: \"ECG - Echo Cardiogram\"\r\n////\t\t\t},\r\n////\t\t\taxisX: {\r\n////\t\t\t\tinterval: 10000000000000000000000,\r\n////\t\t\t},\r\n////\t\t\taxisY: {\r\n////\t\t\t\ttitle: \"\",\r\n////\t\t\t\tgridColor: \"white\",\r\n////\t\t\t\ttickColor: \"white\",\r\n////\t\t\t\tinterval: 1000,\r\n////\t\t\t\tminimum: -700,\r\n////\t\t\t\tmaximum: 800\r\n////\t\t\t},\r\n////\t\t\tdataPointWidth: 5,\r\n////\t\t\tdata: [{\r\n////\t\t\t\ttype: \"line\",\r\n////\t\t\t\tdataPoints: dps,\r\n////\t\t\t\tmarkerColor: \"rgba(200, 200, 200, 0)\"\r\n\r\n////\t\t\t},]\r\n////\t\t}\r\n////\t\treturn (\r\n////\t\t\t<div style={{ width: \"25%%\", justifyContent: \"center\" }}>\r\n////\t\t\t\t<CanvasJSChart options={options}\r\n////\t\t\t\t\tonRef={ref => this.chart = ref}\r\n////\t\t\t\t/>\r\n////\t\t\t</div>\r\n////\t\t);\r\n////\t}\r\n////}\r\n////export default ECG;"]},"metadata":{},"sourceType":"module"}